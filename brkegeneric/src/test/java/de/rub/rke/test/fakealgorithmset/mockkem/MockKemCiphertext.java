package de.rub.rke.test.fakealgorithmset.mockkem;

import de.rub.rke.kem.KemCiphertext;
import de.rub.rke.kem.KemPublicKey;

/**
 * Implementation of KemCiphertext for the mock Kem
 * 
 * The ciphertext simply saves the public key used for encapsulation and the
 * keyid generated by the Kem.
 * 
 * @author Marco Smeets
 *
 */
public class MockKemCiphertext implements KemCiphertext {
	int keyid;
	MockKemPublicKey publicKey;

	MockKemCiphertext(KemPublicKey publicKey, int keyid) {
		this.publicKey = (MockKemPublicKey) publicKey;
		this.keyid = keyid;
	}

	public int getKeyId() {
		return keyid;
	}

	public KemPublicKey getEncryptionKey() {
		return publicKey;
	}

	/**
	 * We use the int encoding throughout the test classes to easily compare two
	 * values.
	 * 
	 * @return
	 */
	public int[] getIntEncoding() {
		int[] encoding = new int[2];
		encoding[0] = keyid;
		encoding[1] = publicKey.getId();
		return encoding;
	}
}
